set nocompatible
filetype off

" In order to get Vundle working you need to clone a repo
" git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'rking/ag.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'yssl/QFEnter'
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'
Plugin 'scrooloose/syntastic'
Plugin 'Chiel92/vim-autoformat'

call vundle#end()

set rtp+=~/.fzf

filetype plugin indent on

set nu
set tabstop=4
set shiftwidth=4
set autoindent
set showmatch
set expandtab
set colorcolumn=100
set laststatus=2

" Set default file encodings
set encoding=utf-8
set fillchars+=stl:\ ,stlnc:\
set termencoding=utf-8
set fileencodings=utf-8,default,cp1251

" Allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Disable autoindenting when pasting large chunk of code
set pastetoggle=<F2>

" Highlight spaces and tabs in the end of line
set list listchars=tab:>-,trail:.,precedes:<,extends:>
set list

" Color tweaks
syntax on
syntax enable
let g:solarized_termtrans=1
set background=dark
let g:solarized_visibility="high"
let g:solarized_contrast="high"
colorscheme zellner

" Vimdiff color scheme
highlight DiffChange cterm=none ctermfg=black ctermbg=LightGreen gui=none guifg=bg guibg=LightGreen
highlight DiffText cterm=none ctermfg=black ctermbg=Red gui=none guifg=bg guibg=Red

" Generate airline fonts
let g:airline_powerline_fonts=1

" Rebind leader from backslash to comma
let mapleader=","

inoremap jj <ESC>
nnoremap <Leader>s :%s/\<<C-r><C-w>\>/
cmap w!! %!sudo tee > /dev/null %
noremap <Leader>a :Ag <C-r><C-w><cr>
nnoremap <silent> <C-p> :Files<CR>

func CompileRunGcc()
    w
    !g++-5 -DHOME -std=c++0x -O2 % -o %<
    :bot split | term time ./%<
endfunc

func CompileRunTeX()
    w
    !pdflatex %
    !open %<.pdf
endfunc

map <F5> :call CompileRunGcc() <CR>
map <F8> :call CompileRunTeX() <CR>

" Completion lists when opening a file from ex
set wildmenu
set wildmode=longest,list
set wcm=<Tab>
menu Encoding.koi8-r :e ++enc=koi8-r ++ff=unix<CR>
menu Encoding.windows-1251 :e ++enc=cp1251 ++ff=dos<CR>
menu Encoding.cp866 :e ++enc=cp866 ++ff=dos<CR>
menu Encoding.utf-8 :e ++enc=utf8 <CR>
menu Encoding.koi8-u :e ++enc=koi8-u ++ff=unix<CR>
map <F9> :emenu Encoding.<TAB>

" Basic syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Enable shortcut for autoformatting
noremap <F3> :Autoformat<CR>
let g:formatdef_autopep8 = "'autopep8 - --aggressive --max-line-length 80 --range '.a:firstline.' '.a:lastline"
let g:formatters_python = ['autopep8']

if filereadable(glob(".vimrc.local"))
    source .vimrc.local
endif
