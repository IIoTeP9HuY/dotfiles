" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to " make changes after sourcing archlinux.vim since it alters the value of the " 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim72/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

set nocompatible
filetype off

" In order to get Vundle working you need to clone a repo
" git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'rking/ag.vim'
Plugin 'ctrlpvim/ctrlp.vim.git'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'terryma/vim-multiple-cursors'


call vundle#end()

filetype plugin indent on

set nu
set tabstop=4
set shiftwidth=4
set autoindent
set showmatch
set expandtab
set colorcolumn=100
set laststatus=2
syntax on

syntax enable
"let g:solarized_termcolors=16
let g:solarized_termtrans=1
set background=dark
let g:solarized_visibility="high"
let g:solarized_contrast="high"
colorscheme zellner

set encoding=utf-8
set fillchars+=stl:\ ,stlnc:\
set termencoding=utf-8

" rebind leader from backslash to comma
let mapleader=","

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Disable autoindenting when pasting large chunk of code
set pastetoggle=<F2>

" Highlight spaces and tabs in the end of line
set list listchars=tab:>-,trail:.,precedes:<,extends:>
set list

set fileencodings=utf-8,default,cp1251

inoremap jj <ESC>

nnoremap <Leader>s :%s/\<<C-r><C-w>\>/

func CompileRunGcc()
    w
    !g++-5 -DHOME -std=c++0x -O2 % -o %<
    !time ./%<
endfunc

func RunGcc()
    !time ./%<
endfunc

func RunPython2()
    w
    !python2 %
endfunc

func RunPython3()
    w
    !python3 %
endfunc

func CompileRunTeX()
    w
    !pdflatex %
    !open %<.pdf
endfunc

au BufRead,BufNewFile *.thrift set filetype=thrift
au! Syntax thrift source ~/.vim/thrift.vim

au BufRead,BufNewFile *.ypp set filetype=yacc
au! Syntax yacc source /usr/share/vim/vim73/syntax/yacc.vim

cmap w!! %!sudo tee > /dev/null %

map <F5> :call CompileRunGcc() <CR>
"map <F6> :call RunGcc() <CR>
map <F6> :call RunPython2() <CR>
map <F7> :call RunPython3() <CR>
map <F8> :call CompileRunTeX() <CR>

" Completion lists when opening a file from ex
set wildmenu
set wildmode=longest,list

set wcm=<Tab>

menu Encoding.koi8-r :e ++enc=koi8-r ++ff=unix<CR>

menu Encoding.windows-1251 :e ++enc=cp1251 ++ff=dos<CR>

menu Encoding.cp866 :e ++enc=cp866 ++ff=dos<CR>

menu Encoding.utf-8 :e ++enc=utf8 <CR>

menu Encoding.koi8-u :e ++enc=koi8-u ++ff=unix<CR>

map <F9> :emenu Encoding.<TAB>

"noremap <Leader>a :Ack <cword><cr>
noremap <Leader>a :Ag <cword><cr>

" Speedup ctrlp
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor

    let g:ctrlp_user_command = 'ag %s -l --nocolor --nogroup --hidden --ignore .git --ignore .svn --ignore .hg --ignore .DS_Store --ignore "**/*.pyc" --ignore CMakeFiles -g ""'

    let g:ctrlp_use_caching = 0
endif

" Return more search results
let g:ctrlp_match_window = 'results:20'

if filereadable(glob(".vimrc.local")) 
    source .vimrc.local
endif
