# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Set a Ctrl-b shortcut for reloading your tmux config
bind r source-file ~/.tmux.conf

# Open new window with the same path
bind c new-window -c "#{pane_current_path}"
bind j split-window -h -c "#{pane_current_path}"
bind k split-window -v -c "#{pane_current_path}"

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Rename your terminals
set -g set-titles on
set -g set-titles-string '#(whoami)::#h'

# Status bar customization
set -g status-bg black
set -g status-fg white
set -g status-interval 5
set -g status-left-length 90
set -g status-right-length 60

set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'

set-option -g default-shell /bin/zsh

# Turn on vim keybindings
setw -g mode-keys vi
set -g status-keys vi

# Make scroll history larger
set -g history-limit 10000

# Renumber windows when a window is closed
set -g renumber-windows on

setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

set-window-option -g aggressive-resize on
set -g default-terminal "screen-256color"
set -g default-command "reattach-to-user-namespace -l zsh 2> /dev/null || zsh"

# Bad Wolf by Steve Losh
# =====================
set -g status-fg white
set -g status-bg colour234
# set -g status-bg default #set for transparent background
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
# Custom status bar
# Powerline
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I ❭ #W #[fg=colour39,bg=colour234,nobold]"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

