alias edit="emacsclient -t"

# Taskwarrior & Timewarrior {{{

alias in="task add +in"
tn() { task next +next $@ && ~/.task/project-next.py }
alias tl="task list"
alias tin="task in"
alias ta="task add"
alias tm="task modify"
alias td="task done"
alias tdel="task delete"
alias tc="task context"

tickle () {
    deadline=$1
    shift
    in +tickle wait:$deadline $@
}
alias tick=tickle

alias tw=timew

# }}}

# Notes {{{

note () {
  if [ "$#" -ne 1 ]
  then
    NAME="$(find ~/notes/* -type f | fzf)"
    if [ -n "$NAME" ]
    then
        edit $NAME
    fi
  else
    local id="$1"
    local dir="$HOME/notes"
    local file="$dir/$id.md"

    mkdir -p $dir
    edit "$file"
  fi
}

alias n=note
alias nd="nvim -c VimwikiMakeDiaryNote"

# }}}

# oh-my-zsh {{{

# Set name of the theme to load.
ZSH_THEME="pure"

# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

# Load oh-my-zsh plugins
plugins=(git mercurial virtualenv osx vi-mode brew pip taskwarrior)

source $ZSH/oh-my-zsh.sh

# }}}

# SSH {{{

# Fix SSH Forwarding after reconnecting to tmux session
if [[ -S "$SSH_AUTH_SOCK" && ! -h "$SSH_AUTH_SOCK" ]]; then
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock;
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock;

function ssh_vi {
    MY_BASHRC=.bashrc.acid
    scp -q -C ~/.bashrc $1:$MY_BASHRC
    /usr/bin/ssh -t $1 "bash --rcfile $MY_BASHRC -i -o vi"
    /usr/bin/ssh -q -t $1 rm $MY_BASHRC
}
#alias ssh=ssh_vi

# }}}

# Misc {{{

# Turn on VIM mode
bindkey -v

# Shortcut to exit insert mode
bindkey -M viins 'fd' vi-cmd-mode

# Customize to your needs...
export PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:$HOME/.bin:$HOME/bin:$HOME/.local/bin
autoload zmv

# Turn on bash completion compatibility mode
autoload bashcompinit
bashcompinit

# Activate Russian characters in terminal
export LC_ALL=en_US.utf-8

# Enable pretty printing of cpp source files using 'enscript' command
export ENSCRIPT="-2rj -M A4 --line-numbers --highlight=cpp --fancy-header=simple --color=1"

# Run parallel ssh command on a list of machines
alias xs='pdsh -R ssh -f 1024 -t 64 -w -'

# Store longer commands history
HISTSIZE=10000000
SAVEHIST=$HISTSIZE

# Search history by matching prefix
setopt   extended_history share_history inc_append_history
setopt   hist_ignore_space hist_ignore_dups hist_expire_dups_first
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward
bindkey "^N" history-beginning-search-forward

command_exists () {
    type "$1" &> /dev/null ;
}

# }}}

# FZF {{{

# Add fzf support
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# }}}

# Git {{{

# fco - checkout git branch/tag
fco() {
  local branches branch
  branches=$(git branch) &&
  branch=$(echo "$branches" | fzf +m) &&
  git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}

# }}}

# z.sh {{{

# Add z.sh support
# TODO: Replace .bin with variable
[ -f ~/.bin/z.sh ] && source ~/.bin/z.sh

# Integrate z with fzf
unalias z 2> /dev/null
z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -l 2>&1 | fzf-tmux +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}

# Use more convinient shortcut
alias j=z
alias jj=zz

# }}}

# Emacs {{{

alias em="emacsclient -t"

# }}}

# Vim {{{

alias vrc="vim ~/.vimrc"
alias zrc="vim ~/.zshrc"
alias tmrc="vim ~/.tmux.conf"
alias i3rc="vim ~/.config/i3/config"

# Use neovim intead of vim if available
if command_exists nvim ; then
    alias vim=nvim
fi

open_vim_session() {
    vim -S ~/.vim/sessions/${1}.vim
}
alias vims=open_vim_session

export EDITOR=nvim
export GIT_EDITOR=nvim

# }}}

# Aliases {{{

alias psg="ps aux | grep"

function tmx {
    name=$1
    if tmux list-sessions | grep -q "^${name}:"; then
        tmux attach -t "${name}"
    else
        tmux new-session -s "${name}"
    fi
}

# Handle square brackets used for specifying rake arguments correctly.
alias rake='noglob rake'

# }}}

# Lower keyboard repeat rate limit.
if [[ `uname` == 'Linux' && -z $SSH_TTY ]]
then
    xset r rate 200 20
fi

if [[ -f $HOME/.zshrc.work ]]; then
    source $HOME/.zshrc.work
fi

if [[ -f $HOME/.zshrc.local ]]; then
    source $HOME/.zshrc.local
fi

if [[ -d $HOME/.keychain ]]; then
    source $HOME/.keychain/`hostname`-sh
fi

if [[ -f $HOME/.zshenv ]]; then
    source $HOME/.zshenv
fi

# vim:foldmethod=marker:foldlevel=0
